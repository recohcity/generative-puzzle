@tailwind base;
@tailwind components;
@tailwind utilities;

/* 禁用游戏界面所有文本选择 */
* {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-touch-callout: none;
  -webkit-tap-highlight-color: transparent;
}

/* 确保按钮文本不可选择 */
button, 
button *, 
[role="button"], 
[role="button"] *,
label,
label * {
  -webkit-user-select: none !important;
  -moz-user-select: none !important;
  -ms-user-select: none !important;
  user-select: none !important;
  -webkit-touch-callout: none !important;
  -webkit-tap-highlight-color: transparent !important;
}

/* 游戏标题和提示文本也不可选择 */
h1, h2, h3, h4, h5, h6,
.game-title,
.game-hint,
.game-progress {
  -webkit-user-select: none !important;
  -moz-user-select: none !important;
  -ms-user-select: none !important;
  user-select: none !important;
}

/* 语言切换按钮固定样式 - 强制覆盖所有状态 */
.language-button-fixed,
.language-button-fixed:hover,
.language-button-fixed:focus,
.language-button-fixed:active,
.language-button-fixed:focus-visible,
.language-button-fixed[data-state="open"],
.language-button-fixed[aria-expanded="true"] {
  background-color: #1E1A2A !important;
  color: #F68E5F !important;
  border: none !important;
  outline: none !important;
  box-shadow: none !important;
}

.language-button-fixed span,
.language-button-fixed:hover span,
.language-button-fixed:focus span,
.language-button-fixed:active span,
.language-button-fixed:focus-visible span {
  color: #F68E5F !important;
}

/* 工具按钮固定样式 - 强制覆盖所有状态 */
.utility-button-fixed,
.utility-button-fixed:hover,
.utility-button-fixed:focus,
.utility-button-fixed:active,
.utility-button-fixed:focus-visible,
.utility-button-fixed[data-state="open"],
.utility-button-fixed[aria-expanded="true"] {
  background-color: #1E1A2A !important;
  color: #F68E5F !important;
  border: none !important;
  outline: none !important;
  box-shadow: none !important;
}

.utility-button-fixed svg,
.utility-button-fixed:hover svg,
.utility-button-fixed:focus svg,
.utility-button-fixed:active svg,
.utility-button-fixed:focus-visible svg {
  color: #F68E5F !important;
  stroke: #F68E5F !important;
}

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;

    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;

    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;

    --primary: 222.2 47.4% 11.2%;
    --primary-foreground: 210 40% 98%;

    --secondary: 210 40% 96.1%;
    --secondary-foreground: 222.2 47.4% 11.2%;

    --muted: 210 40% 96.1%;
    --muted-foreground: 215.4 16.3% 46.9%;

    --accent: 210 40% 96.1%;
    --accent-foreground: 222.2 47.4% 11.2%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;

    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 222.2 84% 4.9%;

    --radius: 0.5rem;
  }

  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;

    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;

    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;

    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 11.2%;

    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;

    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;

    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;

    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 212.7 26.8% 83.9%;
  }

  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
  button, .button, [role="button"] {
    font-family: 'Segoe UI', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'Helvetica Neue', Arial, 'sans-serif';
  }
}

/* 
  全局的 "html, body" 样式已移除，以解决 /test 页面的滚动问题。
  这些样式（如 overflow: hidden, position: fixed）阻止了所有页面的滚动。
  如果你的主游戏页面需要禁止滚动，请在其主容器上应用一个特定的类，
  例如 .no-scroll-container，并把相关样式移到该类中。
*/
.no-scroll-container {
  overscroll-behavior: none; /* 阻止页面滚动传播到外部容器 */
  overflow: hidden; /* 阻止页面滚动 */
  position: fixed; /* 固定位置防止滚动 */
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  /* 修改触摸行为设置以允许按钮点击 */
  touch-action: pan-x pan-y; /* 允许基本的平移触摸操作，但阻止其他手势 */
  -webkit-overflow-scrolling: touch; /* 使用更标准的设置 */
  -webkit-user-select: none; /* 禁止用户选择文本以避免相关手势 */
  user-select: none;
  -webkit-touch-callout: none; /* 禁止长按链接弹出菜单 */
}

/* 特定地禁止canvas触摸事件的滚动行为，但允许按钮正常工作 */
canvas {
  touch-action: none !important; /* 禁用默认触摸手势，如滑动、缩放等 */
  -webkit-touch-callout: none !important;
  -webkit-user-select: none !important;
  user-select: none !important;
}

/* 确保按钮可以正常触摸点击 */
button, 
[role="button"],
.cursor-pointer {
  touch-action: manipulation !important; /* 允许按钮的点击操作 */
  -webkit-touch-callout: default !important; /* 允许默认行为 */
  cursor: pointer !important;
}

/* 针对iOS全屏模式的特别优化 */
:fullscreen,
:-webkit-full-screen,
:-moz-full-screen {
  width: 100vw !important;
  height: 100vh !important;
  margin: 0 !important;
  padding: 0 !important;
  touch-action: none !important;
  -webkit-overflow-scrolling: none !important;
  overscroll-behavior: none !important;
  position: fixed !important;
}

/* 全屏模式下的容器调整 */
:fullscreen #root,
:-webkit-full-screen #root,
:-moz-full-screen #root,
:fullscreen main,
:-webkit-full-screen main,
:-moz-full-screen main,
:fullscreen div,
:-webkit-full-screen div,
:-moz-full-screen div {
  width: 100vw !important;
  height: 100vh !important;
  margin: 0 !important;
  padding: 0 !important;
  overscroll-behavior: none !important;
  -webkit-overflow-scrolling: none !important;
}

/* 专门针对iPad的全屏优化 */
@supports (-webkit-touch-callout: none) {
  /* iOS设备特有的CSS */
  body:has(:fullscreen),
  body:has(:-webkit-full-screen) {
    position: fixed !important;
    width: 100% !important;
    height: 100% !important;
    overflow: hidden !important;
    touch-action: none !important;
    -webkit-overflow-scrolling: none !important;
    overscroll-behavior: none !important;
  }
}

/* 加载页面动画 */
@keyframes float {
  0% { transform: translateY(0) rotate(0deg); }
  100% { transform: translateY(-20px) rotate(10deg); }
}

/* 不同的浮动动画方向 */
.float-1 {
  animation: float 3s ease-in-out 0s infinite alternate;
}

.float-2 {
  animation: float 4s ease-in-out 0.5s infinite alternate-reverse;
}

.float-3 {
  animation: float 5s ease-in-out 0.3s infinite alternate;
}

.float-4 {
  animation: float 3.5s ease-in-out 0.7s infinite alternate-reverse;
}

/* 加载进度条脉冲动画 - 修改为只增加不减少 */
@keyframes loading-pulse {
  0% { width: 15%; }
  100% { width: 35%; }
}

.animate-loading-pulse {
  animation: loading-pulse 1.5s ease-in-out infinite alternate;
}

/* 修复面板和画布的圆角问题 */
canvas {
  border-radius: inherit;
  background-color: transparent !important;
}

.rounded-3xl, .rounded-2xl {
  isolation: isolate;
}

/* 确保所有容器完全遵循圆角 */
div[class*="rounded"] {
  mask-image: radial-gradient(white, black);
  -webkit-mask-image: -webkit-radial-gradient(white, black);
}

/* 添加玻璃效果和发光效果 */
.bg-white\/20 {
  background-color: rgba(255, 255, 255, 0.2);
  backdrop-filter: blur(12px);
  box-shadow: 
    inset 0 0 15px rgba(255, 255, 255, 0.2),
    0 0 30px rgba(255, 255, 255, 0.1);
}

/* 增强画布内容在透明背景上的可见性 */
.cursor-pointer.w-full.h-full {
  mix-blend-mode: lighten;
}

/* 添加全屏按钮的淡入动画 */
@keyframes fadeIn {
  from { opacity: 0; transform: translateY(10px); }
  to { opacity: 1; transform: translateY(0); }
}

.animate-fadeIn {
  animation: fadeIn 0.5s ease-out forwards;
}

/* 添加竖屏布局切换样式 */
.order-swap .order-1 {
  order: 2 !important;
}

.order-swap .order-2 {
  order: 1 !important;
}

/* 改善移动设备触摸体验 */
@media (max-width: 768px) {
  :root {
    touch-action: none;
  }
  
  html, body {
    overscroll-behavior: none;
    touch-action: pan-y;
  }
  
  .prevent-overscroll {
    overscroll-behavior: none;
  }
  
  /* 竖屏模式下的布局调整 */
  @media (orientation: portrait) {
    /* 增加主控制面板的最小高度 */
    .order-2 {
      min-height: 50vh !important;
    }
    
    /* 确保画布容器有足够高度 */
    .order-1 {
      min-height: 45vh !important;
    }
  }
  
  /* 交互优化 */
  canvas {
    touch-action: none;
  }
  
  /* 移动设备上隐藏鼠标交互的提示文本 */
  .mouse-hint {
    display: none;
  }
  
  /* 移动设备上增大按钮点击区域 */
  button {
    min-height: 44px;
    min-width: 44px;
  }
  
  /* 确保所有可交互元素有足够的点击范围 */
  .cursor-pointer {
    min-height: 32px;
    min-width: 32px;
  }
}

/* 全屏模式下的样式优化 */
:fullscreen, :fullscreen > div {
  width: 100% !important;
  height: 100% !important;
  max-width: 100% !important;
  max-height: 100% !important;
}

/* 设备特定样式 */
/* 手机设备样式 */
.flex-col {
  /* 默认样式适用于所有设备 */
  display: flex;
  gap: 0.8rem;
}

/* 手机模式下的切换布局时的过渡动画 */
@media (max-width: 640px) {
  .flex-col > div {
    transition: order 0.3s ease-in-out;
  }
  
  /* 用于手机上滑动切换面板的效果 */
  @keyframes slideInRight {
    from { transform: translateX(100%); opacity: 0; }
    to { transform: translateX(0); opacity: 1; }
  }
  
  @keyframes slideInLeft {
    from { transform: translateX(-100%); opacity: 0; }
    to { transform: translateX(0); opacity: 1; }
  }
  
  .slide-in-right {
    animation: slideInRight 0.3s forwards;
  }
  
  .slide-in-left {
    animation: slideInLeft 0.3s forwards;
  }
  
  /* 手机模式下的标签切换效果 */
  .tab-content-enter {
    opacity: 0;
    transform: translateX(20px);
  }
  
  .tab-content-enter-active {
    opacity: 1;
    transform: translateX(0);
    transition: opacity 300ms, transform 300ms;
  }
  
  .tab-content-exit {
    opacity: 1;
    transform: translateX(0);
  }
  
  .tab-content-exit-active {
    opacity: 0;
    transform: translateX(-20px);
    transition: opacity 300ms, transform 300ms;
  }
}

/* 解决之前的order-swap样式 */
.order-swap .order-1 {
  order: 2 !important;
}

.order-swap .order-2 {
  order: 1 !important;
}

/* 改善移动设备触摸体验 */
@media (max-width: 768px) {
  :root {
    touch-action: none;
  }
  
  html, body {
    overscroll-behavior: none;
    touch-action: pan-y;
  }
  
  .prevent-overscroll {
    overscroll-behavior: none;
  }
  
  /* 竖屏模式下的布局调整 */
  @media (orientation: portrait) {
    /* 增加主控制面板的最小高度 */
    .order-2 {
      min-height: 50vh !important;
    }
    
    /* 确保画布容器有足够高度 */
    .order-1 {
      min-height: 45vh !important;
    }
  }
  
  /* 交互优化 */
  canvas {
    touch-action: none;
  }
  
  /* 移动设备上隐藏鼠标交互的提示文本 */
  .mouse-hint {
    display: none;
  }
  
  /* 移动设备上增大按钮点击区域 */
  button {
    min-height: 44px;
    min-width: 44px;
  }
  
  /* 确保所有可交互元素有足够的点击范围 */
  .cursor-pointer {
    min-height: 32px;
    min-width: 32px;
  }
}

/* 特别针对Safari的样式 */
@supports (-webkit-touch-callout: none) {
  /* iOS设备的SVG修复 */
  svg {
    stroke-width: inherit !important;
    stroke-linecap: inherit !important;
    stroke-linejoin: inherit !important;
  }
}

/* 专门为电脑全屏模式优化 */
@media (min-width: 1024px) {
  :fullscreen .flex-col, 
  :-webkit-full-screen .flex-col, 
  :-moz-full-screen .flex-col {
    flex-direction: row !important;
    justify-content: center;
  }
  
  :fullscreen .flex-col > div, 
  :-webkit-full-screen .flex-col > div, 
  :-moz-full-screen .flex-col > div {
    height: calc(100vh - 32px) !important;
  }
  
  :fullscreen .flex-col > div:first-child, 
  :-webkit-full-screen .flex-col > div:first-child, 
  :-moz-full-screen .flex-col > div:first-child {
    width: 350px !important;
    min-width: 350px !important;
    flex-shrink: 0 !important;
    order: 1 !important;
  }
  
  :fullscreen .flex-col > div:nth-child(2), 
  :-webkit-full-screen .flex-col > div:nth-child(2), 
  :-moz-full-screen .flex-col > div:nth-child(2) {
    flex: 1 !important;
    order: 2 !important;
  }
}

/* 修复Safari中SVG属性和固定位置问题 */
svg {
  /* stroke-width: inherit; */
  stroke-linecap: inherit;
  stroke-linejoin: inherit;
}

/* 针对Safari浏览器的专门优化 */
@media not all and (min-resolution:.001dpcm) { 
  @supports (-webkit-appearance:none) {
    svg {
      /* 在Safari中使用驼峰命名的属性 */
      stroke-width: inherit;
      stroke-linecap: inherit;
      stroke-linejoin: inherit;
    }
    
    /* 解决Safari中的固定定位问题 */
    .fixed {
      position: -webkit-sticky;
      position: sticky;
      z-index: 50;
    }
    
    /* 针对Safari的全屏优化 */
    :-webkit-full-screen {
      width: 100vw !important;
      height: 100vh !important;
    }
  }
}

/* 添加响应式设计的边界情况处理 */
@media (min-width: 1024px) and (max-width: 1280px) {
  /* 针对中等大小屏幕的优化 */
  .lg\:w-\[350px\] {
    width: 300px !important;
  }
  
  .lg\:min-w-\[350px\] {
    min-width: 300px !important;
  }
}

